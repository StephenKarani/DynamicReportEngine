<?xml version="1.0" encoding="UTF-8" ?>
<dataTemplate dataSourceRef="stock_summary" name="stock_summary">
<properties>
<property name="xml_tag_case" value="upper"/>
</properties>
<parameters>
</parameters>
<lexicals>
</lexicals>
<dataQuery>
<sqlStatement name="Q_SUMMARY">
<![CDATA[
	SELECT T3.TYPE_NUMBER, T3.TYPE_DESC, 
		   IFNULL(T2.QBAGS,0)QBAGS, IFNULL(T2.QKGS,0)QKGS, IFNULL(T2.QPRICE,0)QPRICE, IFNULL(T2.QVALUE,0)QVALUE,
		   IFNULL(T1.FBAGS,0)FBAGS, IFNULL(T1.FKGS,0)FKGS, IFNULL(T1.FVALUE,0) FVALUE,
		   GETKGSTOBAGS(((IFNULL(T2.QBAGS,0) * 60) + IFNULL(T2.QKGS,0)) - ((IFNULL(T1.FBAGS,0) * 60) + IFNULL(T2.QKGS,0)),0) NBAGS,
		   GETREMAININGKGS(((IFNULL(T2.QBAGS,0) * 60) + IFNULL(T2.QKGS,0)) - ((IFNULL(T1.FBAGS,0) * 60) + IFNULL(T2.QKGS,0)),0) NKGS,
		   (IFNULL(T2.QVALUE,0) - IFNULL(T1.FVALUE,0)) NVALUE
	FROM types AS T3 
	LEFT JOIN 
	(SELECT T3.TYPE_NUMBER FTYPENO, T1.CONT_TYPE_CODE AS FTYPECODE, SUM(GETBAGTOTALVALUE(IFNULL(CONT_PRICE_50, 0),IFNULL(T1.CONT_BAGS_REQ, 0), 0)) FVALUE,
		   SUM(IFNULL(T1.CONT_BAGS_REQ, 0)) FBAGS, 0 FKGS
		 FROM contracts AS T1 
		 LEFT JOIN nycdata AS T2 ON T1.CONT_PF_YEAR = T2.NYCD_YEAR 
								AND T1.CONT_PF_MONTH = T2.NYCD_MONTH
		 LEFT JOIN types AS T3 ON T3.TYPE_CODE = T1.CONT_TYPE_CODE
		WHERE T1.CONT_STATUS <> 'Shipped' OR T1.CONT_STATUS IS NULL
		GROUP BY T3.TYPE_NUMBER, T1.CONT_TYPE_CODE) AS T1 ON T3.TYPE_CODE = T1.FTYPECODE
	RIGHT JOIN 
	(SELECT T1.TYPE_NUMBER QTYPENO, T1.TYPE_CODE QTYPECODE, T1.TYPE_DESC QDESCRIPTION, (SUM(IFNULL(T2.STOCK_BAGS, 0)) + GETKGSTOBAGS(SUM(IFNULL(T2.STOCK_KGS, 0)), 0)) QBAGS, 
	   GETREMAININGKGS(SUM(IFNULL(T2.STOCK_KGS, 0)),0) QKGS,
	   CASE SUM(GETBAGTOTALVALUE(IFNULL(T2.STOCK_PRICE_50, 0), IFNULL(T2.STOCK_BAGS, 0), IFNULL(T2.STOCK_KGS, 0))) 
	   WHEN 0 THEN 0
	   ELSE ((SUM(GETBAGTOTALVALUE(IFNULL(T2.STOCK_PRICE_50, 0), IFNULL(T2.STOCK_BAGS, 0), IFNULL(T2.STOCK_KGS, 0))) * 50) / GETBAGSTOKGS(SUM(IFNULL(T2.STOCK_BAGS, 0) + GETKGSTOBAGS(IFNULL(T2.STOCK_KGS, 0), 0)), SUM(GETREMAININGKGS(IFNULL(T2.STOCK_KGS, 0), 0)), 0))
	   END QPRICE,
	   SUM(GETBAGTOTALVALUE(IFNULL(T2.STOCK_PRICE_50, 0), IFNULL(T2.STOCK_BAGS, 0), IFNULL(T2.STOCK_KGS, 0))) QVALUE
	FROM types AS T1 RIGHT JOIN stocks AS T2 ON T1.TYPE_CODE = T2.STOCK_TYPE_CODE
	GROUP BY T1.TYPE_NUMBER, T1.TYPE_CODE, T1.TYPE_DESC) AS T2 ON T3.TYPE_CODE = T2.QTYPECODE
	WHERE IFNULL(T2.QBAGS,0) <> 0
	ORDER BY T3.TYPE_NUMBER
]]>
</sqlStatement>
<sqlStatement name="Q_SUMMARY_TOTAL">
<![CDATA[
		SELECT GETKGSTOBAGS(SUM(GETBAGSTOKGS(IFNULL(ST.QBAGS,0), IFNULL(ST.QKGS,0), 0)),0) QBAGS,
		   GETREMAININGKGS(SUM(GETBAGSTOKGS(IFNULL(ST.QBAGS,0), IFNULL(ST.QKGS,0), 0)),0) QKGS,
		   (50 * SUM((IFNULL(ST.QPRICE,0) / 50) * ((60 * IFNULL(ST.QBAGS,0)) + IFNULL(ST.QKGS,0)))) / GETBAGSTOKGS(SUM(IFNULL(ST.QBAGS, 0)), SUM(IFNULL(ST.QKGS, 0)), 0) QPRICE,
		   SUM(IFNULL(ST.QVALUE,0))QVALUE2,
		   GETBAGTOTALVALUE(
			(50 * SUM((IFNULL(ST.QPRICE,0) / 50) * ((60 * IFNULL(ST.QBAGS,0)) + IFNULL(ST.QKGS,0)))) / GETBAGSTOKGS(SUM(IFNULL(ST.QBAGS, 0)), SUM(IFNULL(ST.QKGS, 0)), 0),
			GETKGSTOBAGS(SUM(GETBAGSTOKGS(IFNULL(ST.QBAGS,0), IFNULL(ST.QKGS,0), 0)),0),
			GETREMAININGKGS(SUM(GETBAGSTOKGS(IFNULL(ST.QBAGS,0), IFNULL(ST.QKGS,0), 0)),0))QVALUE,
			SUM(IFNULL(ST.FVALUE,0))FVALUE,
			SUM(IFNULL(ST.FBAGS,0))FBAGS,
			SUM(IFNULL(ST.FKGS,0))FKGS,
			SUM(IFNULL(ST.NBAGS,0))NBAGS,
			SUM(IFNULL(ST.NKGS,0))NKGS,
			SUM(IFNULL(ST.NVALUE,0))NVALUE
	FROM (
	SELECT T3.TYPE_NUMBER, T3.TYPE_DESC, 
		   IFNULL(T2.QBAGS,0)QBAGS, IFNULL(T2.QKGS,0)QKGS, IFNULL(T2.QPRICE,0)QPRICE, IFNULL(T2.QVALUE,0)QVALUE,
		   IFNULL(T1.FBAGS,0)FBAGS, IFNULL(T1.FKGS,0)FKGS, IFNULL(T1.FVALUE,0) FVALUE,
		   GETKGSTOBAGS(((IFNULL(T2.QBAGS,0) * 60) + IFNULL(T2.QKGS,0)) - ((IFNULL(T1.FBAGS,0) * 60) + IFNULL(T2.QKGS,0)),0) NBAGS,
		   GETREMAININGKGS(((IFNULL(T2.QBAGS,0) * 60) + IFNULL(T2.QKGS,0)) - ((IFNULL(T1.FBAGS,0) * 60) + IFNULL(T2.QKGS,0)),0) NKGS,
		   (IFNULL(T2.QVALUE,0) - IFNULL(T1.FVALUE,0)) NVALUE
	FROM types AS T3 
	LEFT JOIN 
	(SELECT T3.TYPE_NUMBER FTYPENO, T1.CONT_TYPE_CODE AS FTYPECODE, SUM(GETBAGTOTALVALUE(IFNULL(CONT_PRICE_50, 0),IFNULL(T1.CONT_BAGS_REQ, 0), 0)) FVALUE,
		   SUM(IFNULL(T1.CONT_BAGS_REQ, 0)) FBAGS, 0 FKGS
		 FROM contracts AS T1 
		 LEFT JOIN nycdata AS T2 ON T1.CONT_PF_YEAR = T2.NYCD_YEAR 
								AND T1.CONT_PF_MONTH = T2.NYCD_MONTH
		 LEFT JOIN types AS T3 ON T3.TYPE_CODE = T1.CONT_TYPE_CODE
		WHERE T1.CONT_STATUS <> 'Shipped' OR T1.CONT_STATUS IS NULL
		GROUP BY T3.TYPE_NUMBER, T1.CONT_TYPE_CODE) AS T1 ON T3.TYPE_CODE = T1.FTYPECODE
	RIGHT JOIN 
	(SELECT T1.TYPE_NUMBER QTYPENO, T1.TYPE_CODE QTYPECODE, T1.TYPE_DESC QDESCRIPTION, (SUM(IFNULL(T2.STOCK_BAGS, 0)) + GETKGSTOBAGS(SUM(IFNULL(T2.STOCK_KGS, 0)), 0)) QBAGS, 
	   GETREMAININGKGS(SUM(IFNULL(T2.STOCK_KGS, 0)),0) QKGS,
	   CASE SUM(GETBAGTOTALVALUE(IFNULL(T2.STOCK_PRICE_50, 0), IFNULL(T2.STOCK_BAGS, 0), IFNULL(T2.STOCK_KGS, 0))) 
	   WHEN 0 THEN 0
	   ELSE ((SUM(GETBAGTOTALVALUE(IFNULL(T2.STOCK_PRICE_50, 0), IFNULL(T2.STOCK_BAGS, 0), IFNULL(T2.STOCK_KGS, 0))) * 50) / GETBAGSTOKGS(SUM(IFNULL(T2.STOCK_BAGS, 0) + GETKGSTOBAGS(IFNULL(T2.STOCK_KGS, 0), 0)), SUM(GETREMAININGKGS(IFNULL(T2.STOCK_KGS, 0), 0)), 0))
	   END QPRICE,
	   SUM(GETBAGTOTALVALUE(IFNULL(T2.STOCK_PRICE_50, 0), IFNULL(T2.STOCK_BAGS, 0), IFNULL(T2.STOCK_KGS, 0))) QVALUE
	FROM types AS T1 RIGHT JOIN stocks AS T2 ON T1.TYPE_CODE = T2.STOCK_TYPE_CODE
	GROUP BY T1.TYPE_NUMBER, T1.TYPE_CODE, T1.TYPE_DESC) AS T2 ON T3.TYPE_CODE = T2.QTYPECODE
	WHERE IFNULL(T2.QBAGS,0) <> 0) AS ST
]]>
</sqlStatement>
</dataQuery>
<dataStructure>
<group name="G_SUMMARY" dataType="varchar2" source="Q_SUMMARY">
    <element name="TYPENO" dataType="varchar2" value="TYPE_NUMBER"/>
    <element name="TYPEDESCRIPTION" dataType="varchar2" value="TYPE_DESC"/>
    <element name="QBAGS" dataType="integer" value="QBAGS"/>
    <element name="QKGS" dataType="integer" value="QKGS"/>
    <element name="QPRICE" dataType="integer" value="QPRICE"/>
    <element name="QVALUE" dataType="integer" value="QVALUE"/>
    <element name="FBAGS" dataType="integer" value="FBAGS"/>
    <element name="FKGS" dataType="integer" value="FKGS"/>
    <element name="FVALUE" dataType="integer" value="FVALUE"/>
    <element name="NBAGS" dataType="integer" value="NBAGS"/>
    <element name="NKGS" dataType="integer" value="NKGS"/>
    <element name="NVALUE" dataType="integer" value="NVALUE"/>
</group>
<group name="G_SUMMARY_TOTAL" dataType="varchar2" source="Q_SUMMARY_TOTAL">
    <element name="QBAGS" dataType="integer" value="QBAGS"/>
    <element name="QKGS" dataType="integer" value="QKGS"/>
    <element name="QPRICE" dataType="integer" value="QPRICE"/>
    <element name="QVALUE" dataType="integer" value="QVALUE"/>
    <element name="QVALUE2" dataType="integer" value="QVALUE2"/>
    <element name="FBAGS" dataType="integer" value="FBAGS"/>
    <element name="FKGS" dataType="integer" value="FKGS"/>
    <element name="FVALUE" dataType="integer" value="FVALUE"/>
    <element name="NBAGS" dataType="integer" value="NBAGS"/>
    <element name="NKGS" dataType="integer" value="NKGS"/>
    <element name="NVALUE" dataType="integer" value="NVALUE"/>
</group>
</dataStructure>
</dataTemplate>